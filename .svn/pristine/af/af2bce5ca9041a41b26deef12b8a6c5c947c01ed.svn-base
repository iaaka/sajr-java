package util.bio;

import java.util.HashSet;

import util.Interval;

public class Intron extends Interval {
	private int max_ovehang = 0;
	private HashSet<Integer> read_positions = null;
	Integer position_no = null;
	
	public Intron(int start, int stop, int strand) {
		this(start, stop, strand, null);
	}

	public Intron(int start, int stop, int strand,String id) {
		super(start, stop, strand, id);
	}
	
	public void addRead(int overhang,int read_start){
		if(read_positions == null)
			read_positions = new HashSet<>();
		max_ovehang = Math.max(max_ovehang,overhang);
		read_positions.add(read_start);
		cov++;
	}
	
	public void setMaxOverhang(int o){
		max_ovehang = o;
	}
	
	public void setCov(double c){
		cov = c;
	}
	
	public void setPosNo(int pn){
		position_no = pn;
	}
	
	public int getMaxOverhang(){
		return max_ovehang;
	}
		
	public int getPosNo(){
		//used to force usage of this intron
		if(position_no != null)
			return position_no;
		return read_positions == null?0:read_positions.size();
	}
	
	public void addReads(Intron i){
		if(read_positions == null)
			read_positions = new HashSet<>();
		max_ovehang = Math.max(max_ovehang,i.max_ovehang);
		read_positions.addAll(i.read_positions);
		cov+=i.cov;
	}

}
